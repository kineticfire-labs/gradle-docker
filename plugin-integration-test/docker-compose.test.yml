version: '3.8'

services:
  integration-app:
    image: integration-test-app:latest
    container_name: gradle-docker-integration-app
    profiles: ["test"]
    environment:
      - APP_ENV=integration-test
      - LOG_LEVEL=DEBUG
    ports:
      - "8080:8080"
    networks:
      - integration-network
    healthcheck:
      test: ["CMD", "java", "-cp", "app.jar", "com.kineticfire.gradle.docker.integration.IntegrationTestApp"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    labels:
      - "test.type=integration"
      - "test.component=gradle-docker-plugin"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  test-runner:
    image: integration-test-runner:latest
    container_name: gradle-docker-test-runner
    profiles: ["test"]
    depends_on:
      integration-app:
        condition: service_healthy
    environment:
      - TARGET_SERVICE_URL=http://integration-app:8080
      - TEST_TIMEOUT=30
    networks:
      - integration-network
    command: ["echo", "Test runner would validate the integration-app service"]

  # Optional monitoring service for integration tests
  health-monitor:
    image: alpine:latest
    container_name: gradle-docker-health-monitor
    profiles: ["monitoring", "test"]
    depends_on:
      - integration-app
    networks:
      - integration-network
    command: |
      sh -c "
        while true; do
          echo '[Health Monitor]' $$(date): Checking application health...
          if wget -q --spider http://integration-app:8080/health 2>/dev/null; then
            echo '[Health Monitor]' Application is healthy
          else
            echo '[Health Monitor]' Application health check failed
          fi
          sleep 15
        done
      "
    restart: unless-stopped

networks:
  integration-network:
    driver: bridge
    name: gradle-docker-integration

volumes:
  test-data:
    name: gradle-docker-test-data
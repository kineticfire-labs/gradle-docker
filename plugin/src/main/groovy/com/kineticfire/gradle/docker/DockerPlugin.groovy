/*
 * (c) Copyright 2023 KineticFire. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.kineticfire.gradle.docker


import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.Task
import org.gradle.api.tasks.Delete
import org.gradle.api.tasks.Copy


// todo notes
    // https://gradlehero.com/introduction-to-gradle-plugins/
    // https://docs.gradle.org/current/userguide/lazy_configuration.html

/**
 *
 */
class DockerPlugin implements Plugin<Project> {

    void apply( Project project ) {

        project.extensions.create( 'docker', DockerExtension )

        Delete dockerClean = project.tasks.create( 'dockerClean', Delete, {
            group = 'Docker'
            description = 'Cleans the Docker build directory.'
        })

        // todo for reference: project.tasks.register( 'docker-prepare-build-task', DockerPrepareBuildTask )
        Copy dockerPrepareBuild = project.tasks.create( 'dockerPrepareBuild', Copy, {
            group = 'Docker'
            description = 'Prepares the source and build directory for building a Docker image.'
            dependsOn dockerClean
        })


        project.task( 'docker-save-task', type: DockerSaveTask ) {
            group = 'Docker'
            description = 'Saves local Docker image to tar.gz file.'
        }


    }

}

/*
 * (c) Copyright 2023-2025 gradle-docker Contributors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Top-level integration test project demonstrating gradle-docker plugin usage.
 * 
 * This project showcases realistic multi-project structure where:
 * - 'app' subproject builds the Java application 
 * - 'app-image' subproject creates Docker image and runs integration tests
 * 
 * This mirrors how developers would actually structure projects using the gradle-docker plugin.
 */

// No plugins needed at root level - subprojects handle their own builds

group = 'com.kineticfire.gradle.docker.integration'
version = '1.0.0'

// Ensure proper build order: app must be built before app-image
project(':app-image') {
    afterEvaluate {
        tasks.findByName('dockerBuildTimeServer')?.dependsOn(':app:jar')
    }
}

// Aggregate tasks for convenience
tasks.register('buildAll') {
    description = 'Build both app and Docker image'
    group = 'build'
    dependsOn ':app:build', ':app-image:dockerBuild'
}

tasks.register('testAll') {
    description = 'Run all tests (unit, smoke, integration)'
    group = 'verification' 
    dependsOn ':app:test', ':app-image:smokeTest', ':app-image:integrationTestSuite'
}

tasks.register('fullTest') {
    description = 'Run all tests including different lifecycle patterns'
    group = 'verification'
    dependsOn ':app:test', 
              ':app-image:smokeTest',
              ':app-image:integrationTestSuite',
              ':app-image:integrationTestClass', 
              ':app-image:integrationTestMethod'
}
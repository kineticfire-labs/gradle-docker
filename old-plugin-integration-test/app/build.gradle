/*
 * (c) Copyright 2023-2025 gradle-docker Contributors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * App subproject - builds the Java application that will be containerized.
 * 
 * This represents the "normal" Java application build that developers 
 * would have, separate from Docker concerns.
 */

plugins {
    id 'java'
    id 'application'
}

group = 'com.kineticfire.gradle.docker.integration'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'com.kineticfire.gradle.docker.integration.app.TimeServerApp'
}

repositories {
    mavenCentral()
}

dependencies {
    // Lightweight HTTP server
    implementation libs.javalin
    implementation libs.jackson.databind
    implementation libs.slf4j.simple
    
    // Testing
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter
    testImplementation libs.assertj.core
    testRuntimeOnly libs.junit.platform.launcher
}

test {
    useJUnitPlatform()
}

// Configure the JAR for Docker usage
jar {
    manifest {
        attributes(
            'Main-Class': application.mainClass.get(),
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }
    
    // Create fat JAR for easier Docker packaging
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}